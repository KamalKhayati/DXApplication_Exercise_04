/****************************** Ghost.github.io ******************************\
*	Module Name:	XtraFrmUser.cs
*	Project:		DXApplication_Exercise_04
*	Copyright (C) 2018 Kamal Khayati, All rights reserved.
*	This software may be modified and distributed under the terms of the MIT license.  See LICENSE file for details.
*
*	Written by Kamal Khayati <Kamal1355@gmail.com>,  2018 / 11 / 28   06:11 ب.ظ
*	
***********************************************************************************/
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using System.Data.Entity;

namespace DXApplication_Exercise_04
{
    public partial class FrmUser : DevExpress.XtraEditors.XtraForm
    {
        public FrmUser()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            usersTableAdapter1.Fill(dB_EFCF_DXApplication_Exercise_04DataSet11.Users);


        }
        int _Id = 0;
        int _index = 0;
        private void btnAdd_Click(object sender, EventArgs e)
        {
            if (btnAdd.Text == "جدید")
            {
                txtFName.Enabled = txtLName.Enabled = cmbClass.Enabled = true;
                txtFName.Text = txtLName.Text = cmbClass.Text = string.Empty;
                btnAdd.Text = "ثبت";
                gridControl1.Enabled = false;
            }
            else if (btnAdd.Text == "ثبت")
            {
                if (txtFName.Text == string.Empty || txtLName.Text == string.Empty)
                {
                    XtraMessageBox.Show("اطلاعات را بصورت کامل وارد کنید", "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Information); ;

                }
                else
                {
                    try
                    {
                        //gridView1.AddNewRow();
                        //gridView1.SetFocusedRowCellValue(gridView1.Columns[0], 33);
                        //gridView1.SetFocusedRowCellValue(gridView1.Columns[1], txtFName.Text);
                        //gridView1.SetFocusedRowCellValue(gridView1.Columns[2], txtLName.Text);
                        //gridView1.SetFocusedRowCellValue(gridView1.Columns[3], cmbClass.Text);

                        using (var db = new MyContext())
                        {
                            var ad = new Users()
                            {
                                FName = txtFName.Text,
                                LName = txtLName.Text,
                                Class = cmbClass.Text
                            };
                            db.Users.Add(ad);
                            db.SaveChanges();
                            usersTableAdapter1.Fill(dB_EFCF_DXApplication_Exercise_04DataSet11.Users);
                            XtraMessageBox.Show("عملیات باموفقیت انجام شد", "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Information); ;
                        }
                    }
                    catch (Exception)
                    {
                        XtraMessageBox.Show("عملیات با خطا مواجه شد", "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Error);

                    }
                }
                btnAdd.Text = "جدید";
                txtFName.Enabled = txtLName.Enabled = cmbClass.Enabled = false;
                txtFName.Text = txtLName.Text = cmbClass.Text = string.Empty;
                gridControl1.Enabled = true;

            }
            else if (btnAdd.Text == "ویرایش")
            {
                if (gridView1.SelectedRowsCount > 0)
                {
                    txtFName.Enabled = txtLName.Enabled = cmbClass.Enabled = true;
                    btnAdd.Text = "ذخیره";
                    btnDelete.Enabled = false;
                    _index = Convert.ToInt32(gridView1.GetFocusedDataSourceRowIndex());
                    _Id = Convert.ToInt32(gridView1.GetFocusedRowCellValue(gridView1.Columns[0]));
                    gridControl1.Enabled = false;
                }

            }
            else if (btnAdd.Text == "ذخیره")
            {
                try
                {
                    using (var db = new MyContext())
                    {
                        var q = db.Users.SingleOrDefault(s => s.Id == _Id);
                        if (q != null)
                        {
                            q.FName = txtFName.Text;
                            q.LName = txtLName.Text;
                            q.Class = cmbClass.Text;
                            //db.Users.Attach(q);
                            //db.Entry(q).State = EntityState.Modified;
                            db.SaveChanges();
                            usersTableAdapter1.Fill(dB_EFCF_DXApplication_Exercise_04DataSet11.Users);
                            XtraMessageBox.Show("عملیات باموفقیت انجام شد", "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Information); ;
                        }
                    }
                }
                catch (Exception ex)
                {
                    //MessageBox.Show(ex.Message);
                    XtraMessageBox.Show("عملیات با خطا مواجه شد", "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
                txtFName.Enabled = txtLName.Enabled = cmbClass.Enabled = false;
                btnAdd.Text = "ویرایش";
                btnDelete.Enabled = true;
                gridControl1.Enabled = true;

            }
        }

        private void gridControl1_KeyDown(object sender, KeyEventArgs e)
        {
            if (gridView1.RowCount > 0)
            {
                txtFName.Text = gridView1.GetFocusedRowCellValue(gridView1.Columns[1]).ToString();
                txtLName.Text = gridView1.GetFocusedRowCellValue(gridView1.Columns[2]).ToString();
                cmbClass.Text = gridView1.GetFocusedRowCellValue(gridView1.Columns[3]).ToString();
            }

        }

        private void gridControl1_MouseClick(object sender, MouseEventArgs e)
        {
            if (gridView1.RowCount > 0)
            {
                txtFName.Text = gridView1.GetFocusedRowCellValue(gridView1.Columns[1]).ToString();
                txtLName.Text = gridView1.GetFocusedRowCellValue(gridView1.Columns[2]).ToString();
                cmbClass.Text = gridView1.GetFocusedRowCellValue(gridView1.Columns[3]).ToString();
            }
        }

        private void gridControl1_KeyUp(object sender, KeyEventArgs e)
        {
            if (gridView1.RowCount > 0)
            {
                txtFName.Text = gridView1.GetFocusedRowCellValue(gridView1.Columns[1]).ToString();
                txtLName.Text = gridView1.GetFocusedRowCellValue(gridView1.Columns[2]).ToString();
                cmbClass.Text = gridView1.GetFocusedRowCellValue(gridView1.Columns[3]).ToString();
            }
        }

        private void btnDelete_Click(object sender, EventArgs e)
        {
            if (gridView1.SelectedRowsCount > 0)
            {
                gridControl1.Enabled = false;
                if (MessageBox.Show("آیا کاربر جاری حذف شود؟", "پیغام", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    try
                    {
                        _Id = Convert.ToInt32(gridView1.GetFocusedRowCellValue(gridView1.Columns[0]));
                        _index = Convert.ToInt32(gridView1.GetFocusedDataSourceRowIndex());

                        using (var db = new MyContext())
                        {
                            var q = db.Users.SingleOrDefault(s => s.Id == _Id);
                            if (q != null)
                            {
                                //db.Users.Attach(q);
                                //db.Entry(q).State = EntityState.Deleted;
                                db.Users.Remove(q);
                                db.SaveChanges();
                                gridView1.DeleteRow(_index);
                                //usersTableAdapter1.Fill(dB_EFCF_DXApplication_Exercise_04DataSet11.Users);
                                XtraMessageBox.Show("عملیات باموفقیت انجام شد", "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Information); ;
                                txtFName.Text = txtLName.Text = cmbClass.Text = string.Empty;
                            }
                        }
                    }
                    catch (Exception)
                    {
                        XtraMessageBox.Show("عملیات با خطا مواجه شد", "پیغام", MessageBoxButtons.OK, MessageBoxIcon.Error);

                    }
                }
                gridControl1.Enabled = true;
            }
        }

        private void gridView1_FocusedRowLoaded(object sender, DevExpress.XtraGrid.Views.Base.RowEventArgs e)
        {

        }
    }
}
